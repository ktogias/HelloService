stages:
    - Prepare test envronment
    - Unit test
    - Functional test
    - Acceptance test
    - Merge and push
    
before_script:
    - docker info

Build test image:
    stage: Prepare test envronment
    script: 
        - docker build -t hello-test-$CI_COMMIT_SHA --target test .
        - docker run -d --name hello-test-$CI_COMMIT_SHA --rm hello-test-$CI_COMMIT_SHA
           
Run unit tests:
    stage: Unit test
    script: 
    #    - docker rm hello-test || true
    #    - docker run -d --name hello-test --rm hello-test || true
        - docker exec hello-test-$CI_COMMIT_SHA ./vendor/bin/codecept run unit --xml --coverage --coverage-html --coverage-xml
    #after_script:
    #    - docker stop hello-test
        
Run functional tests:
    stage: Functional test
    script: 
        - docker exec hello-test-$CI_COMMIT_SHA ./vendor/bin/codecept run functional --xml --coverage --coverage-html --coverage-xml
    #after_script:
    #    - docker stop hello-test
        
Run acceptance tests:
    stage: Acceptance test
    script: 
        - docker exec hello-test-$CI_COMMIT_SHA ./vendor/bin/codecept run acceptance
    #after_script:
    #    - docker stop hello-test

Merge and push trunk:
    stage: Merge and push
    except: 
        - trunk
    script: 
        - git fetch
        - git checkout trunk
        - git pull
        - git merge origin/master
        - git merge origin/$CI_COMMIT_REF_NAME
        - git config --global user.name "cirunner"
        - git config --global user.email "gitlab-runner@ntsdev2.sch.gr"
        - git push git@150.140.26.209:Microservices/HelloWorld/HelloService.git HEAD:trunk   
        
after_script:
    - docker stop hello-test-$CI_COMMIT_SHA || true 
    - docker rm hello-test-$CI_COMMIT_SHA || true
    - docker rmi hello-test-$CI_COMMIT_SHA || true