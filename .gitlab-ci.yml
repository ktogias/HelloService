stages:
    - Prepare test environment
    - Unit test
    - Functional test
    - Acceptance test
    - Merge and push
    - Clean up test environment
    
Build test image:
    stage: Prepare test environment
    before_script:
        - docker info
    script: 
        - docker build -t hello-test-$CI_COMMIT_SHA --target test .
        - docker run -d --name hello-test-$CI_COMMIT_SHA --rm hello-test-$CI_COMMIT_SHA
            
Run unit tests:
    stage: Unit test
    script: 
        - docker exec hello-test-$CI_COMMIT_SHA ./vendor/bin/codecept run unit --xml --coverage --coverage-html --coverage-xml
        - docker cp hello-test-$CI_COMMIT_SHA:./php/tests/_output/ ./php/tests/_output
        - echo $(bash ./util/compute_code_coverage.sh)
        - [ $(bash ./util/compute_code_coverage.sh) > ".69" ] 
       
Run functional tests:
    stage: Functional test
    script: 
        - docker exec hello-test-$CI_COMMIT_SHA ./vendor/bin/codecept run functional --xml --coverage --coverage-html --coverage-xml
          
Run acceptance tests:
    stage: Acceptance test
    script: 
        - docker exec hello-test-$CI_COMMIT_SHA ./vendor/bin/codecept run acceptance

Merge and push trunk:
    stage: Merge and push
    except: 
        - trunk
    script: 
        - git fetch
        - git checkout trunk
        - git pull
        - git merge origin/master
        - git merge origin/$CI_COMMIT_REF_NAME
        - git config --global user.name "cirunner"
        - git config --global user.email "gitlab-runner@ntsdev2.sch.gr"
        - git push git@150.140.26.209:Microservices/HelloWorld/HelloService.git HEAD:trunk   

Clean up:
    stage: Clean up test environment
    when: always
    script: 
        - docker stop hello-test-$CI_COMMIT_SHA
        - docker rm hello-test-$CI_COMMIT_SHA || true
        - docker rmi hello-test-$CI_COMMIT_SHA